# Default values for tyk-headless chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Chart name override. Truncates to 63 characters. 
# Default value: tyk-headless.name
nameOverride: ""

# App name override. Truncates to 63 characters. 
# Default value: tyk-headless.fullname
fullnameOverride: ""

# These are your Tyk stack secrets will directly map to the following Tyk stack
# configuration:
secrets:
  # tyk.conf node_secret
  # tyk.conf secret
  APISecret: CHANGEME

redis:
  # The addrs value will allow you to set your Redis addresses. If you are
  # using a redis cluster, you can list the endpoints of the redis instances
  # or use the cluster configuration endpoint.
  # Default value: redis.{{ .Release.Namespace }}.svc.cluster.local:6379
  # addrs:
  #   - redis.tyk.svc.cluster.local:6379

  # Redis password
  # pass: ""

  # Enables SSL for Redis connection. Redis instance will have to support that.
  # Default value: false
  # useSSL: true

  # The enableCluster value will allow you to indicate to Tyk whither you are running
  # a Redis cluster or not.
  # Default value: false
  # enableCluster: true

mongo:
  enabled: false
#    mongoURL: mongodb://mongo.tyk.svc.cluster.local:27017/tyk_analytics
#    #If you're using Bitnami MongoDB chart please input your password below
#    #mongoURL: mongodb://root:pass@tyk-mongo-mongodb.tyk.svc.cluster.local:27017/tyk-dashboard?authSource=admin
#    useSSL: false

gateway:
  kind: DaemonSet
  replicaCount: 1
  hostName: tyk-gw.local
  tls: false
  containerPort: 8080
  tags: ""
  image:
    repository: tykio/tyk-gateway
    tag: v3.1.2
    pullPolicy: IfNotPresent
  service:
    type: NodePort
    port: 443
    externalTrafficPolicy: Local
    annotations: {}
  control:
    enabled: false
    containerPort: 9696
    port: 9696
    type: ClusterIP
    annotations: {}
  ingress:
    enabled: false
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    path: /
    hosts:
      - tyk-gw.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi
  nodeSelector: {}
  tolerations:
    - key: node-role.kubernetes.io/master
      effect: NoSchedule
  affinity: {}
  extraEnvs: []

# If pump is enabled the Gateway will create and collect analytics data to send to a data store of your choice
# These can be set up in the pump config. The possible pump configs can be found here: https://github.com/TykTechnologies/tyk-pump#configuration
pump:
  enabled: false
  replicaCount: 1
  image:
    repository: tykio/tyk-pump-docker-pub
    tag: v1.2.0
    pullPolicy: IfNotPresent
  annotations: {}
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  extraEnvs: []

rbac: true
